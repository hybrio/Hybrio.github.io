{"version":3,"sources":["Docs/Alexander-CV.pdf","components/Typer.js","components/pages/HomePage.js","components/Repository.js","components/pages/ProjectsPage.js","Images/me-grey.jpg","components/pages/AboutPage.js","components/TagChecker.js","components/pages/TagCheckerPage.js","App.js","serviceWorker.js","index.js"],"names":["Typer","props","handleType","dataText","state","isDeleting","loopNum","text","typingSpeed","fullText","length","setState","substring","setTimeout","this","id","className","heading","React","Component","defaultProps","Homepage","href","MyCV","without","rel","target","to","TagChecker","archived","name","parse","require","ProjectsPage","projects","width","height","previewData","updateWindowDimensions","bind","myRequest","Request","fetch","then","response","json","data","forEach","project","key","readmeRequest","url","method","headers","updatedState","window","addEventListener","removeEventListener","innerWidth","innerHeight","class","map","html_url","onMouseEnter","updatePreview","Repository","AboutPage","src","me","alt","TagCheckerPage","App","exact","path","component","HomePage","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9f5e8d54.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Alexander-CV.d1178bb9.pdf\";","import React from 'react';\nclass Typer extends React.Component {\n\n    static defaultProps = {\n      heading: '',\n      dataText: []\n    }\n  \n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        text: '',\n        isDeleting: false,\n        loopNum: 0,\n        typingSpeed: 100\n      }\n    }\n  \n    componentDidMount() {\n      this.handleType();\n    }\n  \n    handleType = () => {\n      const { dataText } = this.props;\n      const { isDeleting, loopNum, text, typingSpeed } = this.state;\n      const i = loopNum % dataText.length;\n      const fullText = dataText[i];\n  \n      this.setState({\n        text: isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1),\n        typingSpeed: isDeleting ? 20 : 100\n      });\n  \n      if (!isDeleting && text === fullText) {\n        \n        setTimeout(() => this.setState({ isDeleting: true }), 500);\n        \n      } else if (isDeleting && text === '') {\n        \n        this.setState({\n          isDeleting: false,\n          loopNum: loopNum + 1\n        });\n        \n      }\n  \n      setTimeout(this.handleType, typingSpeed);\n    };\n  \n    render() {    \n      return (\n        <div id=\"test\">\n          <h2 className=\"typer\">{ this.props.heading }&nbsp;\n            <span>{ this.state.text }</span>\n            <span id=\"cursor\"/>\n          </h2>\n        </div>\n      );\n      \n    }\n  }\n  export default Typer;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport MyCV from '../../Docs/Alexander-CV.pdf';\nimport Typer from '../Typer';\n\nclass Homepage extends React.Component {\n  render() {\n    return (\n      <>\n        <nav className=\"homePageNav\">\n            <ul className=\"homeNavList\">\n              <li className=\"homePageNavItem\"> <a href={MyCV} without rel=\"noopener noreferrer\" target=\"_blank\" className = \"link\"><h1 className=\"grow\">Curriculum vitae.</h1></a> </li>\n                <li className=\"homePageNavItem\"><Link to=\"/projects\" className = \"link\"><h1 className=\"grow\">Projects.</h1></Link></li>\n                <li className=\"homePageNavItem\"><Link to=\"/about\" className = \"link\"><h1 className=\"grow\">About.</h1></Link></li>\n            </ul>\n          </nav>\n        <div id=\"content\">\n          <Typer\n    heading={'My name is Alexander,'}\n    dataText={[\"I make things.\",\"I develop applications.\",\"I design backend systems.\", \"I build tooling.\", \"I integrate cloud platforms.\"]} \n  /> \n        </div>\n      </>\n    );\n  }\n}\n\nexport default Homepage;","import React from 'react';\n\nclass TagChecker extends React.Component {\n  render() {\n      let archived;\n    if (this.props.archived) {\n        archived = <div className=\"Archived\"> Archived </div>;\n      } else {\n        archived = <></>;\n      }\n    return (\n            <div className=\"Repository\">\n                &nbsp;{this.props.name}  {archived}\n            </div>\n    );\n  }\n}\n\nexport default TagChecker;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport Repository from '../Repository';\nvar parse = require('html-react-parser');\n\nclass ProjectsPage extends React.Component {\n\n  constructor() {\n    super()\n    this.state = { projects: [], width:0, height:0, previewData:\"<div style=\\\"  display: flex;  align-items: center;justify-content: center; height:50vw\\\">please hover a repository to view it's README.md file</div>\" }\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    let myRequest = new Request(\"https://api.github.com/users/hybrio/starred\");\n    let projects = [];\n\n    fetch(myRequest)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ projects: data });\n        this.state.projects.forEach((project, key) => {\n          let readmeRequest = new Request(project.url + \"/readme\",{\n            method: 'Get',\n            headers: {\n              'Accept': 'application/vnd.github.VERSION.html',\n            }\n          });\n          fetch(readmeRequest).then(response => response.text()).then(data => {\n            let updatedState = this.state.projects;\n            updatedState[key].data = data;\n            this.setState({\n              projects: updatedState\n          })});\n        });\n      });\n\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n  \n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n\n  updatePreview(data) {\n    this.setState({ previewData: data });\n\n  }\n\n  render() {\n    return (\n      <div>\n          <nav class=\"pageNav\">\n            <ul class=\"pageNavList\">\n                <li><h1 className = \"Heading\">Projects.</h1></li>\n                <li id=\"noPaddingOrMargin\"><Link to=\"/\"  id=\"noPaddingOrMargin\"><h1 id=\"noPaddingOrMargin\" className=\"grow\">{'\\u003C'}</h1></Link></li>\n            </ul>\n            <ul class = \"projectList\">\n            {this.state.projects.map(project => {\n              return <a href={project.html_url} target=\"_blank\" rel=\"noopener noreferrer\" onMouseEnter={() => this.updatePreview(project.data)} ><Repository key={`project-${project.id}`} name={project.name} target={project.html_url} data={project.data} >{project.name}</Repository></a>\n            })}\n          </ul>\n          </nav>\n        <div id=\"projects\">\n          { (this.state.width >= 768) ? <div class=\"markdown-body\">{parse(this.state.previewData)}</div>: <></> }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ProjectsPage;","export default __webpack_public_path__ + \"static/media/me-grey.fe557ed0.jpg\";","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport me from '../../Images/me-grey.jpg';\n\nclass AboutPage extends React.Component {\n  render() {\n    return (\n      <div>\n          <nav class=\"pageNav\">\n            <ul class=\"pageNavList\">\n                <li><h1 className = \"Heading\">About me.</h1></li>\n                <li id=\"noPaddingOrMargin\"><Link to=\"/\"  id=\"noPaddingOrMargin\"><h1 id=\"noPaddingOrMargin\" className=\"grow\">{'\\u003C'}</h1></Link></li>\n            </ul>\n          </nav>\n          <div id=\"about\">\n          <img class = \"portrait\" src={me} alt=\"image of me\"/>\n            <p id=\"about-text\">\n              Hi I'm Alexander\n              <br/><br/><br/>\n              I am a software developer from Auckland, New Zealand who enjoys writing code and solving problems.\n              <br/><br/>\n              I am a 2020 Computer Systems Engineering (Hons) Graduate from the University of Auckland.\n              <br/><br/>\n              Unfortunately I don’t have anything too exciting to show you as of yet (I’m still retrieving my older uni projects) but watch this space.\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AboutPage;\n","import React from 'react';\n\nclass TagChecker extends React.Component {\n  render() {\n    return (\n      <div className=\"MenuText\">\n        &nbsp;{this.props.name}\n      </div>\n    );\n  }\n}\n\nexport default TagChecker;","import React from 'react';\nimport TagChecker from '../TagChecker';\n\nclass TagCheckerPage extends React.Component {\n  render() {\n    return (\n      <div>\n        &nbsp;Insert tag Checker\n        <TagChecker/>\n      </div>\n    );\n  }\n}\n\nexport default TagCheckerPage;","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nimport './markdown.css';\nimport HomePage from './components/pages/HomePage';\nimport ProjectsPage from './components/pages/ProjectsPage';\nimport AboutPage from './components/pages/AboutPage';\nimport TagCheckerPage from './components/pages/TagCheckerPage';\n\nfunction App() {\n    return (\n      <Router>\n        <div className=\"App\">\n            <Switch>\n              <Route exact path=\"/about\" component={AboutPage} />\n              <Route exact path=\"/projects\" component={ProjectsPage} />\n              <Route path=\"/\" component={HomePage} />\n              <Route exact path=\"/tag_checker\" component={TagCheckerPage} />\n            </Switch>\n        </div>\n      </Router>\n    );\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}