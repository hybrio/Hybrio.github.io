{"version":3,"sources":["Docs/Alexander-CV.pdf","components/Typer.js","components/pages/HomePage.js","components/Repository.js","components/pages/ProjectsPage.js","Images/me-grey.jpg","components/pages/AboutPage.js","components/TagChecker.js","components/pages/TagCheckerPage.js","App.js","serviceWorker.js","index.js"],"names":["Typer","props","handleType","dataText","state","isDeleting","loopNum","text","typingSpeed","fullText","length","setState","substring","setTimeout","this","id","heading","React","Component","defaultProps","Homepage","href","MyCV","without","rel","target","className","to","TagChecker","archived","name","parse","require","ProjectsPage","projects","width","height","previewData","updateWindowDimensions","bind","myRequest","Request","fetch","then","response","json","data","forEach","project","key","readmeRequest","url","method","headers","updatedState","console","log","window","addEventListener","removeEventListener","innerWidth","innerHeight","map","html_url","onMouseEnter","updatePreview","Repository","AboutPage","src","me","alt","TagCheckerPage","App","exact","path","component","HomePage","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ba49da7f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Alexander-CV.d1178bb9.pdf\";","import React from 'react';\r\nclass Typer extends React.Component {\r\n\r\n    static defaultProps = {\r\n      heading: '',\r\n      dataText: []\r\n    }\r\n  \r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        text: '',\r\n        isDeleting: false,\r\n        loopNum: 0,\r\n        typingSpeed: 100\r\n      }\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.handleType();\r\n    }\r\n  \r\n    handleType = () => {\r\n      const { dataText } = this.props;\r\n      const { isDeleting, loopNum, text, typingSpeed } = this.state;\r\n      const i = loopNum % dataText.length;\r\n      const fullText = dataText[i];\r\n  \r\n      this.setState({\r\n        text: isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1),\r\n        typingSpeed: isDeleting ? 20 : 100\r\n      });\r\n  \r\n      if (!isDeleting && text === fullText) {\r\n        \r\n        setTimeout(() => this.setState({ isDeleting: true }), 500);\r\n        \r\n      } else if (isDeleting && text === '') {\r\n        \r\n        this.setState({\r\n          isDeleting: false,\r\n          loopNum: loopNum + 1\r\n        });\r\n        \r\n      }\r\n  \r\n      setTimeout(this.handleType, typingSpeed);\r\n    };\r\n  \r\n    render() {    \r\n      return (\r\n        <div id=\"test\">\r\n          <h2>{ this.props.heading }&nbsp;\r\n            <span>{ this.state.text }</span>\r\n            <span id=\"cursor\"/>\r\n          </h2>\r\n        </div>\r\n      );\r\n      \r\n    }\r\n  }\r\n  export default Typer;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport MyCV from '../../Docs/Alexander-CV.pdf';\r\nimport Typer from '../Typer';\r\n\r\nclass Homepage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <nav>\r\n            <ul>\r\n              <li> <a href={MyCV} without rel=\"noopener noreferrer\" target=\"_blank\" className=\"grow\">Curriculum vitae. </a> </li>\r\n                <li><Link to=\"/projects\"className=\"grow\">Projects.</Link></li>\r\n                <li><Link to=\"/about\"className=\"grow\">About.</Link></li>\r\n            </ul>\r\n          </nav>\r\n        <div id=\"content\">\r\n          <Typer\r\n    heading={'My name is Alexander,'}\r\n    dataText={[\"I make things.\",\"I develop applications.\",\"I design backend systems.\", \"I build tooling.\", \"I integrate cloud platforms.\"]} \r\n  /> \r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\r\n\r\nclass TagChecker extends React.Component {\r\n  render() {\r\n      let archived;\r\n    if (this.props.archived) {\r\n        archived = <div className=\"Archived\"> Archived </div>;\r\n      } else {\r\n        archived = <></>;\r\n      }\r\n    return (\r\n            <div className=\"Repository\">\r\n                &nbsp;{this.props.name}  {archived}\r\n            </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagChecker;","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Repository from '../Repository';\r\nvar parse = require('html-react-parser');\r\n\r\nclass ProjectsPage extends React.Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = { projects: [], width:0, height:0, previewData:\"\" }\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let myRequest = new Request(\"https://api.github.com/users/hybrio/starred\");\r\n    let projects = [];\r\n\r\n    fetch(myRequest)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({ projects: data });\r\n        this.state.projects.forEach((project, key) => {\r\n          let readmeRequest = new Request(project.url + \"/readme\",{\r\n            method: 'Get',\r\n            headers: {\r\n              'Accept': 'application/vnd.github.VERSION.html',\r\n            }\r\n          });\r\n          fetch(readmeRequest).then(response => response.text()).then(data => {\r\n            let updatedState = this.state.projects;\r\n            updatedState[key].data = data;\r\n            this.setState({\r\n              projects: updatedState\r\n          })});\r\n          console.log(this.state.projects);\r\n        });\r\n      });\r\n\r\n      this.updateWindowDimensions();\r\n      window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  \r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n\r\n  updatePreview(data) {\r\n    this.setState({ previewData: data });\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <nav id=\"pageNav\">\r\n            <ul id=\"pageNavList\">\r\n                <li><h1>Projects.</h1></li>\r\n                <li id=\"noPaddingOrMargin\"><Link to=\"/\"  id=\"noPaddingOrMargin\"><h1 id=\"noPaddingOrMargin\" className=\"grow\">{'\\u003C'}</h1></Link></li>\r\n            </ul>\r\n          </nav>\r\n        <div id=\"projects\">\r\n          <ul>\r\n            {this.state.projects.map(project => {\r\n              return <a href={project.html_url} target=\"_blank\" rel=\"noopener noreferrer\" onMouseEnter={() => this.updatePreview(project.data)} ><Repository key={`project-${project.id}`} name={project.name} target={project.html_url} data={project.data} >{project.name}</Repository></a>\r\n            })}\r\n            {(this.state.width >= 768) ? <div className=\"preview\">{parse(this.state.previewData)}</div>: <></> }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProjectsPage;","export default __webpack_public_path__ + \"static/media/me-grey.fe557ed0.jpg\";","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport me from '../../Images/me-grey.jpg';\r\n\r\nclass AboutPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n          <nav id=\"pageNav\">\r\n            <ul id=\"pageNavList\">\r\n                <li><h1>About me.</h1></li>\r\n                <li id=\"noPaddingOrMargin\"><Link to=\"/\"  id=\"noPaddingOrMargin\"><h1 id=\"noPaddingOrMargin\" className=\"grow\">{'\\u003C'}</h1></Link></li>\r\n            </ul>\r\n          </nav>\r\n          <div id=\"about\">\r\n          <img src={me} alt=\"image of me\"/>\r\n            <p id=\"about-text\">\r\n              Hi I'm Alexander\r\n              <br/><br/><br/>\r\n              I am a software developer from Auckland, New Zealand who enjoys writing code and solving problems.\r\n              <br/><br/>\r\n              I will soon be (covid permitting) a 2020 Computer Systems Engineering (Hons) Graduate from the University of Auckland.\r\n              <br/><br/>\r\n              Unfortunately I don’t have anything too exciting to show you as of yet (I’m still retrieving my older uni projects) but watch this space.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutPage;","import React from 'react';\r\n\r\nclass TagChecker extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"MenuText\">\r\n        &nbsp;{this.props.name}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagChecker;","import React from 'react';\r\nimport TagChecker from '../TagChecker';\r\n\r\nclass TagCheckerPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        &nbsp;Insert tag Checker\r\n        <TagChecker/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagCheckerPage;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nimport HomePage from './components/pages/HomePage';\nimport ProjectsPage from './components/pages/ProjectsPage';\nimport AboutPage from './components/pages/AboutPage';\nimport TagCheckerPage from './components/pages/TagCheckerPage';\n\nfunction App() {\n    return (\n      <Router>\n        <div className=\"App\">\n            <Switch>\n              <Route exact path=\"/about\" component={AboutPage} />\n              <Route exact path=\"/projects\" component={ProjectsPage} />\n              <Route path=\"/\" component={HomePage} />\n              <Route exact path=\"/tag_checker\" component={TagCheckerPage} />\n            </Switch>\n        </div>\n      </Router>\n    );\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}